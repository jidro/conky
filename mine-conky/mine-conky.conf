--[[

#======================================================================================
#-- CONKY
#-- For commands in conky.config section:
#-- http://conky.sourceforge.net/config_settings.html
#--
#-- For commands in conky.text section:
#-- http://conky.sourceforge.net/variables.html
#--
#-- A PDF with all variables is provided
#=====================================================================================
#-- Conky, a system monitor https://github.com/brndnmtthws/conky
#--
#-- This configuration file is Lua code. You can write code in here, and it will
#-- execute when Conky loads. You can use it to generate your own advanced
#-- configurations.
#--
#-- Try this (remove the `--`):
#--
#--   print("Loading Conky config")
#--
#-- For more on Lua, see:
#-- https://www.lua.org/pil/contents.html
#=====================================================================================

]]

conky.config = {

	--Various settings

	background = true,						-- forked to background
	cpu_avg_samples = 2,						-- The number of samples to average for CPU monitoring.
	diskio_avg_samples = 10,					-- The number of samples to average for disk I/O monitoring.
	double_buffer = true,						-- Use the Xdbe extension? (eliminates flicker)
	if_up_strictness = 'address',					-- how strict if testing interface is up - up, link or address
	net_avg_samples = 2,						-- The number of samples to average for net data
	no_buffers = true,						-- Subtract (file system) buffers from used memory?
	temperature_unit = 'celsius',					-- fahrenheit or celsius
	update_interval = 1.0,						-- update interval
	imlib_cache_size = 0,                       			-- disable image cache to get a new spotify cover per song

	--Placement

	alignment = 'top_right',					-- top_left,top_middle,top_right,bottom_left,bottom_middle,bottom_right,
									-- middle_left,middle_middle,middle_right,none

	--Arch Duoscreen

	gap_x = 10,							-- pixels between right or left border
	gap_y = 35,							-- pixels between bottom or left border
	minimum_height = 5,						-- minimum height of window
	minimum_width = 5,						-- minimum width of window
	maximum_width = 330,						-- maximum width of window
	minimum_size = '330 10'ï¼Œ
	max_port_monitor_connections = 64,

	--Graphical

	border_width = 10, 						-- border width in pixels
	border_inner_margin = 10, 					-- margin between border and text
	border_outer_margin = 5, 					-- margin between border and edge of window
	default_bar_width = 80,					    	-- default is 0 - full width
	default_bar_height = 10,					-- default is 6
	default_gauge_height = 25,					-- default is 25
	default_gauge_width =40,					-- default is 40
	default_graph_height = 40,					-- default is 25
	default_graph_width = 0,					-- default is 0 - full width
	default_outline_color = 'white',				-- default outline colour
	default_shade_color = 'black',					-- default shading colour
	draw_borders = false,						-- draw borders around text
	draw_graph_borders = false,					-- draw borders around graphs
	draw_outline = false,						-- draw outline
	draw_shades = true,						-- draw shades
	stippled_borders = 0,						-- dashing the border

	--Textual

	extra_newline = false,						-- extra newline at the end - for asesome's wiboxes
	format_human_readable = true,					-- KiB, MiB rather then number of bytes
	font = 'DejaVu Sans Mono:size=11',  				-- font for complete conky unless in code defined
	max_text_width = 0,						-- 0 will make sure line does not get broken if width too smal
	max_user_text = 16384,						-- max text in conky default 16384
	override_utf8_locale = true,					-- force UTF8 requires xft
	short_units = true,						-- shorten units from KiB to k
	top_name_width = 21,						-- width for $top name value default 15
	top_name_verbose = false,					-- If true, top name shows the full command line of  each  process - Default value is false.
	uppercase = false,						-- uppercase or not
	use_spacer = 'none',						-- adds spaces around certain objects to align - default none
	use_xft = true,							-- xft font - anti-aliased font
	xftfont = 'Microsoft YaHei Mono Regular:size=8',
	xftalpha = 0.8,							-- alpha of the xft font - between 0-1

	--Windows

	own_window = true,						-- create your own window to draw
	own_window_class = 'Conky',
	own_window_type = 'override',					-- if own_window true options are: normal/override/dock/desktop/panel
	own_window_transparent = true,					-- if own_window_argb_visual is true sets background opacity 0%
	own_window_argb_visual =true,					-- use ARGB - composite manager required
	own_window_argb_value = 150,			    		-- real transparency - composite manager required 0-255
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',  -- if own_window true - just hints - own_window_type sets it
	own_window_colour = '#000000',					-- set colour if own_window_transparent no

	--Print

	out_to_console = false,						-- Print text to stdout.
	out_to_ncurses = false,						-- Print text in the console, but use ncurses so that conky can print the text of a new update over the old text. (In the future this will provide more useful things).
	out_to_stderr = false,						-- Print text to stderr.
	out_to_x = true,						-- When set to no, there will be no output in X (useful when you also use things like out_to_console). If you set it to no, make sure that it's placed before all other X-related setting (take the first line of your configfile to be sure).

	--Shows


	show_graph_range = false,					-- Shows the time range covered by a graph.
	show_graph_scale = false,					-- Shows the maximum value in scaled graphs.

	--Colours

	default_color = '#AD7FA8',  					-- default color and border color
	color1 = '#FF0000',
	color2 = '#3e5570',
	color3 = '#cccccc',
	color4 = '#D9BC83',
	color5 = '#00BFFF',						-- teal
	color6 = '#FFFFFF',						-- white

	--Signal Colours
	color7 = '#C0FF00',						-- green
	color8 = '#FFA726',  						-- orange
	color9 = '#F1544B',  						-- firebrick

    --Lua

}

conky.text = [[
${color0}${alignc}$nodename
$sysname $kernel ${alignr}${color4}${time %H:%M:%S}
${color0}Uptime:$color4 $uptime ${color0} Load:$color4 $loadavg
${color0}CPU:${color4} ${cpu}% ${color0}${cpubar 5,80}  ${color0}Disk I/O: $color4${diskio}
${color0}${cpugraph 0 32,155 104E8B ff0000} $alignr${color0}${diskiograph 32,155 104E8B ff00ff 750}
${color0}RAM Usage:$color4 $mem${color0}/${color4}$memmax - $memperc% ${color0}$membar
${color0}Swap Usage:$color4 $swap${color0}/${color4}$swapmax - $swapperc% ${color0}${swapbar}

${color0}Entropy: ${color4}${entropy_avail}${color0}/${color4}${entropy_poolsize} ${color0}${entropy_bar}
${color0}Net Down:$color4 ${downspeed wlp3s0} k/s      ${color0}Net Up:$color4 ${upspeed wlp3s0} k/s
${color0}${downspeedgraph wlp3s0 32,155 104E8B ffff00} $alignr${color0}${upspeedgraph wlp3s0 32,155 104E8B 00ffff}

${color0}Top Processes:
${color0}Name              ${alignr}PID     ${alignr}CPU   ${alignr}MEM
$color1 ${top name 1} ${alignr}${top pid 1}  ${alignr}${top cpu 1}  ${alignr}${top mem 1}
$color1 ${top name 2} ${alignr}${top pid 2}  ${alignr}${top cpu 2}  ${alignr}${top mem 2}
$color1 ${top name 3} ${alignr}${top pid 3}  ${alignr}${top cpu 3}  ${alignr}${top mem 3}
${color0}Mem usage
$color1 ${top_mem name 1} ${alignr}${top_mem pid 1}  ${alignr}${top_mem cpu 1}  ${alignr}${top_mem mem 1}
$color1 ${top_mem name 2} ${alignr}${top_mem pid 2}  ${alignr}${top_mem cpu 2}  ${alignr}${top_mem mem 2}
$color1 ${top_mem name 3} ${alignr}${top_mem pid 3}  ${alignr}${top_mem cpu 3}  ${alignr}${top_mem mem 3}
 
${color0}Port(s) ${alignr} \#Connections$color1
$color1 Inbound: ${tcp_portmon 1 32767 count}  Outbound: ${tcp_portmon 32768 61000 count}${alignr}ALL: ${tcp_portmon 1 65535 count}
${color0}Inbound Connection ${alignr} Local Service/Port$color1
 ${tcp_portmon 1 32767 rhost 0} ${alignr} ${tcp_portmon 1 32767 lservice 0}
 ${tcp_portmon 1 32767 rhost 1} ${alignr} ${tcp_portmon 1 32767 lservice 1}
 ${tcp_portmon 1 32767 rhost 2} ${alignr} ${tcp_portmon 1 32767 lservice 2}
 ${tcp_portmon 1 32767 rhost 3} ${alignr} ${tcp_portmon 1 32767 lservice 3}
 ${tcp_portmon 1 32767 rhost 4} ${alignr} ${tcp_portmon 1 32767 lservice 4}
${color0}Outbound Connection ${alignr} Remote Service/Port$color1
 ${tcp_portmon 32768 61000 rhost 0} ${alignr} ${tcp_portmon 32768 61000 rservice 0}
 ${tcp_portmon 32768 61000 rhost 1} ${alignr} ${tcp_portmon 32768 61000 rservice 1}
 ${tcp_portmon 32768 61000 rhost 2} ${alignr} ${tcp_portmon 32768 61000 rservice 2}
 ${tcp_portmon 32768 61000 rhost 3} ${alignr} ${tcp_portmon 32768 61000 rservice 3}
 ${tcp_portmon 32768 61000 rhost 4} ${alignr} ${tcp_portmon 32768 61000 rservice 4}

${color0}Local IP:${font}${alignr}${color4}${addr wlp3s0}
#${color0}Public IP:${font}${alignr}${color4}${execi 5 cat /path/to/public-ip-file}
# In conky, the command execi 5 can be executed, 
# which means to execute the following commands within five seconds. 
# /path/to/public-ip-file is a file that records public ip address.
# Due to the delay in the request, I did not put the requested ip address in the conky configuration item. 
# Instead, I put the requested IP address in the cron scheduling task and wrote the address to this file.
# So reduce conky performance overhead, 
# otherwise you will feel a kind of card Get command 
# is `curl http://members.3322.org/dyndns/getip` public IP address.
]]
